program: 
    | haiToken eolToken statement eolToken byeToken
	;

statement: expression
    | statement eolToken statement 
    ;

expression:
    | mathOp
    | comment
    | vardec
    | boolOp
    ;

mathOp: 
	| sumOpToken mathOp anToken mathOp
	| diffOpToken mathOp anToken mathOp
	| mulOpToken mathOp anToken mathOp
	| divOpToken mathOp anToken mathOp
	| minOpToken mathOp anToken mathOp
	| maxOpToken mathOp anToken mathOp
	| literal
	| idToken
	;

comment:
	| obtwToken statement tldrToken
	;
	
vardec: 
	| ihasToken idToken
	| ihasToken idToken itzToken literal
	| ihasToken idToken itzToken mathOp
	| ihasToken idToken itzToken idToken
	;
	
infArOp:
	| anyOpToken boolOp anToken boolOp
	| allOpToken boolOp antoken boolOp
	;
	
boolOp:
	| bothOpToken boolOp anToken boolOp
	| eitherOpToken boolOp anToken boolOp
	| wonOpToken boolOp anToken boolOp
	| notOpToken boolOp 
	| literal
	| idToken
	;
	

	
literal:
	| numbrToken
	| numbarToken
	| yarnToken
	| troofToken
	;
	